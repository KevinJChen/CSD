debug:

// ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== //

In file included from nifti1_io.c:3:
./nifti1_io.h:20:10: error: 'znzlib.h' file not found with <angled> include; use
      "quotes" instead
#include <znzlib.h>
         ^~~~~~~~~~
         "znzlib.h"
1 error generated.


// ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== //

clang: warning: csd: 'linker' input unused [-Wunused-command-line-argument]
track_track.c:326:17: warning: using integer absolute value function 'abs' when argument is of floating point type
      [-Wabsolute-value]
            if (abs(nim1->qto_xyz.m[i][j] - nim2->qto_xyz.m[i][j]) > tol) {
                ^
track_track.c:326:17: note: use function 'fabsf' instead
            if (abs(nim1->qto_xyz.m[i][j] - nim2->qto_xyz.m[i][j]) > tol) {
                ^~~
                fabsf
track_track.c:328:24: warning: using integer absolute value function 'abs' when argument is of floating point type
      [-Wabsolute-value]
            } else if (abs(nim1->sto_xyz.m[i][j] - nim2->sto_xyz.m[i][j]) > tol) {
                       ^
track_track.c:328:24: note: use function 'fabsf' instead
            } else if (abs(nim1->sto_xyz.m[i][j] - nim2->sto_xyz.m[i][j]) > tol) {
                       ^~~
                       fabsf
2 warnings generated.
trackvis.c:198:26: warning: format specifies type 'long' but the argument has type 'off_t' (aka 'long long') [-Wformat]
                trksize, fpos);
                         ^~~~
1 warning generated.

// ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== //

nnls.c:89:13: error: implicit declaration of function 'nnls_' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    return (nnls_(a, mda, m, n, b, x, rnorm, w, zz, index, mode));
            ^
nnls.c:89:13: note: did you mean 'nnls_c'?
nnls.c:85:5: note: 'nnls_c' declared here
int nnls_c(double* a, const int* mda, const int* m, const int* n, double* b, 
    ^
1 error generated.

// ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== // ===== //

